/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC721AUGasReporter,
  ERC721AUGasReporterInterface,
} from "../../contracts/ERC721AUGasReporter";

const _abi = [
  {
    inputs: [],
    name: "ApprovalCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalToCurrentOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ApproveToCaller",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintZeroQuantity",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URIQueryForNonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "exists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "mintOne",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "mintOneHundred",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "mintTen",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "numberBurned",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "numberMinted",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "safeMintOne",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "safeMintOneHundred",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "safeMintTen",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalMinted",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611dd8806100206000396000f3fe6080604052600436106101cd5760003560e01c806381861f84116100f7578063b88d4fde11610095578063e6798baa11610064578063e6798baa1461050f578063e985e9c514610523578063ef9c0bec1461056c578063fa695a971461058c57600080fd5b8063b88d4fde1461048f578063c87b56dd146104af578063db6745f8146104cf578063dc33e681146104ef57600080fd5b8063a1448194116100d1578063a144819414610427578063a22cb4651461043a578063a2309ff81461045a578063b62489011461046f57600080fd5b806381861f84146103d257806391ac768b146103f257806395d89b411461041257600080fd5b806326987b601161016f5780634f558e791161013e5780634f558e791461035257806355f804b3146103725780636352211e1461039257806370a08231146103b257600080fd5b806326987b60146102ea57806340c10f19146102ff57806342842e0e146103125780634cd88b761461033257600080fd5b8063095ea7b3116101ab578063095ea7b31461026157806318160ddd1461028357806323b872dd146102aa5780632478d639146102ca57600080fd5b806301ffc9a7146101d257806306fdde0314610207578063081812fc14610229575b600080fd5b3480156101de57600080fd5b506101f26101ed366004611885565b6105ac565b60405190151581526020015b60405180910390f35b34801561021357600080fd5b5061021c610649565b6040516101fe91906118fa565b34801561023557600080fd5b5061024961024436600461190d565b6106db565b6040516001600160a01b0390911681526020016101fe565b34801561026d57600080fd5b5061028161027c36600461193d565b610738565b005b34801561028f57600080fd5b5060665460655403600019015b6040519081526020016101fe565b3480156102b657600080fd5b506102816102c5366004611967565b6107f1565b3480156102d657600080fd5b5061029c6102e53660046119a3565b6107fc565b3480156102f657600080fd5b5060655461029c565b61028161030d36600461193d565b610838565b34801561031e57600080fd5b5061028161032d366004611967565b610846565b34801561033e57600080fd5b5061028161034d366004611a6a565b610861565b34801561035e57600080fd5b506101f261036d36600461190d565b6108d9565b34801561037e57600080fd5b5061028161038d366004611ace565b6108e4565b34801561039e57600080fd5b506102496103ad36600461190d565b6108f0565b3480156103be57600080fd5b5061029c6103cd3660046119a3565b610902565b3480156103de57600080fd5b506102816103ed3660046119a3565b61096a565b3480156103fe57600080fd5b5061028161040d3660046119a3565b610978565b34801561041e57600080fd5b5061021c610983565b61028161043536600461193d565b610992565b34801561044657600080fd5b50610281610455366004611b40565b61099c565b34801561046657600080fd5b5061029c610a4b565b34801561047b57600080fd5b5061028161048a3660046119a3565b610a5f565b34801561049b57600080fd5b506102816104aa366004611b7c565b610a6a565b3480156104bb57600080fd5b5061021c6104ca36600461190d565b610ab4565b3480156104db57600080fd5b506102816104ea3660046119a3565b610b52565b3480156104fb57600080fd5b5061029c61050a3660046119a3565b610b5d565b34801561051b57600080fd5b50600161029c565b34801561052f57600080fd5b506101f261053e366004611bf8565b6001600160a01b039182166000908152606c6020908152604080832093909416825291909152205460ff1690565b34801561057857600080fd5b506102816105873660046119a3565b610b91565b34801561059857600080fd5b506102816105a73660046119a3565b610b9c565b60006001600160e01b031982167f80ac58cd00000000000000000000000000000000000000000000000000000000148061060f57506001600160e01b031982167f5b5e139f00000000000000000000000000000000000000000000000000000000145b8061064357507f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b03198316145b92915050565b60606067805461065890611c2b565b80601f016020809104026020016040519081016040528092919081815260200182805461068490611c2b565b80156106d15780601f106106a6576101008083540402835291602001916106d1565b820191906000526020600020905b8154815290600101906020018083116106b457829003601f168201915b5050505050905090565b60006106e682610ba7565b61071c576040517fcf4700e400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b506000908152606b60205260409020546001600160a01b031690565b6000610743826108f0565b9050806001600160a01b0316836001600160a01b03161415610791576040517f943f7b8c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b336001600160a01b038216146107e1576107ab813361053e565b6107e1576040517fcfb3b94200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6107ec838383610be0565b505050565b6107ec838383610c54565b6001600160a01b0381166000908152606a6020526040812054700100000000000000000000000000000000900467ffffffffffffffff16610643565b6108428282610e8f565b5050565b6107ec83838360405180602001604052806000815250610a6a565b600061086d6001610fbf565b90508015610885576000805461ff0019166101001790555b61088f83836110fd565b80156107ec576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a1505050565b600061064382610ba7565b6107ec60978383611762565b60006108fb82611172565b5192915050565b60006001600160a01b038216610944576040517f8f4eb60400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b506001600160a01b03166000908152606a602052604090205467ffffffffffffffff1690565b61097581600a6112af565b50565b610975816064610e8f565b60606068805461065890611c2b565b61084282826112af565b6001600160a01b0382163314156109df576040517fb06307db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b336000818152606c602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6000610a5a6065546000190190565b905090565b6109758160646112af565b610a75848484610c54565b6001600160a01b0383163b15610aae57610a91848484846112c9565b610aae576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b6060610abf82610ba7565b610af5576040517fa14c4b5000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610aff6113c1565b9050805160001415610b205760405180602001604052806000815250610b4b565b80610b2a846113d0565b604051602001610b3b929190611c66565b6040516020818303038152906040525b9392505050565b6109758160016112af565b6001600160a01b0381166000908152606a602052604081205468010000000000000000900467ffffffffffffffff16610643565b61097581600a610e8f565b610975816001610e8f565b600081600111158015610bbb575060655482105b8015610643575050600090815260696020526040902054600160e01b900460ff161590565b6000828152606b602052604080822080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6000610c5f82611172565b9050836001600160a01b031681600001516001600160a01b031614610cb0576040517fa114810000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000336001600160a01b0386161480610cce5750610cce853361053e565b80610ce9575033610cde846106db565b6001600160a01b0316145b905080610d22576040517f59c896be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b038416610d62576040517fea553b3400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610d6e60008487610be0565b6001600160a01b038581166000908152606a60209081526040808320805467ffffffffffffffff1980821667ffffffffffffffff92831660001901831617909255898616808652838620805493841693831660019081018416949094179055898652606990945282852080546001600160e01b031916909417600160a01b42909216919091021783558701808452922080549193909116610e44576065548214610e44578054602086015167ffffffffffffffff16600160a01b026001600160e01b03199091166001600160a01b038a16171781555b50505082846001600160a01b0316866001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050505050565b6065546001600160a01b038316610eb857604051622e076360e81b815260040160405180910390fd5b81610ed65760405163b562e8dd60e01b815260040160405180910390fd5b6001600160a01b0383166000818152606a6020908152604080832080546fffffffffffffffffffffffffffffffff19811667ffffffffffffffff8083168a0181169182176801000000000000000067ffffffffffffffff1990941690921783900481168a01811690920217909155858452606990925290912080546001600160e01b031916909217600160a01b4290921691909102179055808083015b6040516001830192906001600160a01b038716906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a4808210610f735750606555505050565b60008054610100900460ff1615611061578160ff166001148015610fe25750303b155b6110595760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084015b60405180910390fd5b506000919050565b60005460ff8084169116106110de5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152608401611050565b506000805460ff191660ff92909216919091179055600190565b919050565b600054610100900460ff166111685760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401611050565b6108428282611502565b6040805160608101825260008082526020820181905291810191909152818060011161127d5760655481101561127d57600081815260696020908152604091829020825160608101845290546001600160a01b0381168252600160a01b810467ffffffffffffffff1692820192909252600160e01b90910460ff1615159181018290529061127b5780516001600160a01b031615611211579392505050565b5060001901600081815260696020908152604091829020825160608101845290546001600160a01b038116808352600160a01b820467ffffffffffffffff1693830193909352600160e01b900460ff1615159281019290925215611276579392505050565b611211565b505b6040517fdf2d9b4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61084282826040518060200160405280600081525061159e565b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a02906112fe903390899088908890600401611c95565b602060405180830381600087803b15801561131857600080fd5b505af1925050508015611348575060408051601f3d908101601f1916820190925261134591810190611cd1565b60015b6113a3573d808015611376576040519150601f19603f3d011682016040523d82523d6000602084013e61137b565b606091505b50805161139b576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490505b949350505050565b60606097805461065890611c2b565b60608161141057505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b811561143a578061142481611d04565b91506114339050600a83611d35565b9150611414565b60008167ffffffffffffffff811115611455576114556119be565b6040519080825280601f01601f19166020018201604052801561147f576020820181803683370190505b5090505b84156113b957611494600183611d49565b91506114a1600a86611d60565b6114ac906030611d74565b60f81b8183815181106114c1576114c1611d8c565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506114fb600a86611d35565b9450611483565b600054610100900460ff1661156d5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401611050565b81516115809060679060208501906117e6565b5080516115949060689060208401906117e6565b5060016065555050565b6065546001600160a01b0384166115c757604051622e076360e81b815260040160405180910390fd5b826115e55760405163b562e8dd60e01b815260040160405180910390fd5b6001600160a01b0384166000818152606a6020908152604080832080546fffffffffffffffffffffffffffffffff19811667ffffffffffffffff8083168b0181169182176801000000000000000067ffffffffffffffff1990941690921783900481168b01811690920217909155858452606990925290912080546001600160e01b0319168317600160a01b42909316929092029190911790558190818501903b1561170e575b60405182906001600160a01b038816906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a46116d760008784806001019550876112c9565b6116f4576040516368d2bf6b60e11b815260040160405180910390fd5b80821061168c57826065541461170957600080fd5b611753565b5b6040516001830192906001600160a01b038816906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a480821061170f575b50606555610aae600085838684565b82805461176e90611c2b565b90600052602060002090601f01602090048101928261179057600085556117d6565b82601f106117a95782800160ff198235161785556117d6565b828001600101855582156117d6579182015b828111156117d65782358255916020019190600101906117bb565b506117e292915061185a565b5090565b8280546117f290611c2b565b90600052602060002090601f01602090048101928261181457600085556117d6565b82601f1061182d57805160ff19168380011785556117d6565b828001600101855582156117d6579182015b828111156117d657825182559160200191906001019061183f565b5b808211156117e2576000815560010161185b565b6001600160e01b03198116811461097557600080fd5b60006020828403121561189757600080fd5b8135610b4b8161186f565b60005b838110156118bd5781810151838201526020016118a5565b83811115610aae5750506000910152565b600081518084526118e68160208601602086016118a2565b601f01601f19169290920160200192915050565b602081526000610b4b60208301846118ce565b60006020828403121561191f57600080fd5b5035919050565b80356001600160a01b03811681146110f857600080fd5b6000806040838503121561195057600080fd5b61195983611926565b946020939093013593505050565b60008060006060848603121561197c57600080fd5b61198584611926565b925061199360208501611926565b9150604084013590509250925092565b6000602082840312156119b557600080fd5b610b4b82611926565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff808411156119ef576119ef6119be565b604051601f8501601f19908116603f01168101908282118183101715611a1757611a176119be565b81604052809350858152868686011115611a3057600080fd5b858560208301376000602087830101525050509392505050565b600082601f830112611a5b57600080fd5b610b4b838335602085016119d4565b60008060408385031215611a7d57600080fd5b823567ffffffffffffffff80821115611a9557600080fd5b611aa186838701611a4a565b93506020850135915080821115611ab757600080fd5b50611ac485828601611a4a565b9150509250929050565b60008060208385031215611ae157600080fd5b823567ffffffffffffffff80821115611af957600080fd5b818501915085601f830112611b0d57600080fd5b813581811115611b1c57600080fd5b866020828501011115611b2e57600080fd5b60209290920196919550909350505050565b60008060408385031215611b5357600080fd5b611b5c83611926565b915060208301358015158114611b7157600080fd5b809150509250929050565b60008060008060808587031215611b9257600080fd5b611b9b85611926565b9350611ba960208601611926565b925060408501359150606085013567ffffffffffffffff811115611bcc57600080fd5b8501601f81018713611bdd57600080fd5b611bec878235602084016119d4565b91505092959194509250565b60008060408385031215611c0b57600080fd5b611c1483611926565b9150611c2260208401611926565b90509250929050565b600181811c90821680611c3f57607f821691505b60208210811415611c6057634e487b7160e01b600052602260045260246000fd5b50919050565b60008351611c788184602088016118a2565b835190830190611c8c8183602088016118a2565b01949350505050565b60006001600160a01b03808716835280861660208401525083604083015260806060830152611cc760808301846118ce565b9695505050505050565b600060208284031215611ce357600080fd5b8151610b4b8161186f565b634e487b7160e01b600052601160045260246000fd5b6000600019821415611d1857611d18611cee565b5060010190565b634e487b7160e01b600052601260045260246000fd5b600082611d4457611d44611d1f565b500490565b600082821015611d5b57611d5b611cee565b500390565b600082611d6f57611d6f611d1f565b500690565b60008219821115611d8757611d87611cee565b500190565b634e487b7160e01b600052603260045260246000fdfea2646970667358221220c924314bc0c7a9ffdbadf73c6905a6abf03448dae4294f75a6d6a4bbb8dc039364736f6c63430008090033";

type ERC721AUGasReporterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721AUGasReporterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721AUGasReporter__factory extends ContractFactory {
  constructor(...args: ERC721AUGasReporterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC721AUGasReporter> {
    return super.deploy(overrides || {}) as Promise<ERC721AUGasReporter>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC721AUGasReporter {
    return super.attach(address) as ERC721AUGasReporter;
  }
  override connect(signer: Signer): ERC721AUGasReporter__factory {
    return super.connect(signer) as ERC721AUGasReporter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721AUGasReporterInterface {
    return new utils.Interface(_abi) as ERC721AUGasReporterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721AUGasReporter {
    return new Contract(address, _abi, signerOrProvider) as ERC721AUGasReporter;
  }
}
