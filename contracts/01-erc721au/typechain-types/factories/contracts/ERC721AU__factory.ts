/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ERC721AU, ERC721AUInterface } from "../../contracts/ERC721AU";

const _abi = [
  {
    inputs: [],
    name: "ApprovalCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalToCurrentOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ApproveToCaller",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintZeroQuantity",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URIQueryForNonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611b64806100206000396000f3fe60806040526004361061015f5760003560e01c806355f804b3116100c0578063a22cb46511610074578063c87b56dd11610059578063c87b56dd1461038c578063e6798baa146103ac578063e985e9c5146103c057600080fd5b8063a22cb4651461034c578063b88d4fde1461036c57600080fd5b806370a08231116100a557806370a082311461030457806395d89b4114610324578063a0712d681461033957600080fd5b806355f804b3146102c45780636352211e146102e457600080fd5b806323b872dd1161011757806331c864e8116100fc57806331c864e81461027157806342842e0e146102845780634cd88b76146102a457600080fd5b806323b872dd1461023c57806326987b601461025c57600080fd5b8063081812fc11610148578063081812fc146101bb578063095ea7b3146101f357806318160ddd1461021557600080fd5b806301ffc9a71461016457806306fdde0314610199575b600080fd5b34801561017057600080fd5b5061018461017f366004611611565b610409565b60405190151581526020015b60405180910390f35b3480156101a557600080fd5b506101ae6104a6565b6040516101909190611686565b3480156101c757600080fd5b506101db6101d6366004611699565b610538565b6040516001600160a01b039091168152602001610190565b3480156101ff57600080fd5b5061021361020e3660046116c9565b610595565b005b34801561022157600080fd5b5060665460655403600019015b604051908152602001610190565b34801561024857600080fd5b506102136102573660046116f3565b61064e565b34801561026857600080fd5b5060655461022e565b61021361027f366004611699565b610659565b34801561029057600080fd5b5061021361029f3660046116f3565b610666565b3480156102b057600080fd5b506102136102bf3660046117db565b610681565b3480156102d057600080fd5b506102136102df36600461183f565b6106f9565b3480156102f057600080fd5b506101db6102ff366004611699565b610705565b34801561031057600080fd5b5061022e61031f3660046118b1565b610717565b34801561033057600080fd5b506101ae61077f565b610213610347366004611699565b61078e565b34801561035857600080fd5b506102136103673660046118cc565b610798565b34801561037857600080fd5b50610213610387366004611908565b610847565b34801561039857600080fd5b506101ae6103a7366004611699565b610891565b3480156103b857600080fd5b50600161022e565b3480156103cc57600080fd5b506101846103db366004611984565b6001600160a01b039182166000908152606c6020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982167f80ac58cd00000000000000000000000000000000000000000000000000000000148061046c57506001600160e01b031982167f5b5e139f00000000000000000000000000000000000000000000000000000000145b806104a057507f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b03198316145b92915050565b6060606780546104b5906119b7565b80601f01602080910402602001604051908101604052809291908181526020018280546104e1906119b7565b801561052e5780601f106105035761010080835404028352916020019161052e565b820191906000526020600020905b81548152906001019060200180831161051157829003601f168201915b5050505050905090565b60006105438261092f565b610579576040517fcf4700e400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b506000908152606b60205260409020546001600160a01b031690565b60006105a082610705565b9050806001600160a01b0316836001600160a01b031614156105ee576040517f943f7b8c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b336001600160a01b0382161461063e5761060881336103db565b61063e576040517fcfb3b94200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610649838383610968565b505050565b6106498383836109dc565b6106633382610c17565b50565b61064983838360405180602001604052806000815250610847565b600061068d6001610c35565b905080156106a5576000805461ff0019166101001790555b6106af8383610d73565b8015610649576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a1505050565b610649609783836114ee565b600061071082610de8565b5192915050565b60006001600160a01b038216610759576040517f8f4eb60400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b506001600160a01b03166000908152606a602052604090205467ffffffffffffffff1690565b6060606880546104b5906119b7565b6106633382610f25565b6001600160a01b0382163314156107db576040517fb06307db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b336000818152606c602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6108528484846109dc565b6001600160a01b0383163b1561088b5761086e84848484611055565b61088b576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b606061089c8261092f565b6108d2576040517fa14c4b5000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006108dc61114d565b90508051600014156108fd5760405180602001604052806000815250610928565b806109078461115c565b6040516020016109189291906119f2565b6040516020818303038152906040525b9392505050565b600081600111158015610943575060655482105b80156104a0575050600090815260696020526040902054600160e01b900460ff161590565b6000828152606b602052604080822080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b60006109e782610de8565b9050836001600160a01b031681600001516001600160a01b031614610a38576040517fa114810000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000336001600160a01b0386161480610a565750610a5685336103db565b80610a71575033610a6684610538565b6001600160a01b0316145b905080610aaa576040517f59c896be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b038416610aea576040517fea553b3400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610af660008487610968565b6001600160a01b038581166000908152606a60209081526040808320805467ffffffffffffffff1980821667ffffffffffffffff92831660001901831617909255898616808652838620805493841693831660019081018416949094179055898652606990945282852080546001600160e01b031916909417600160a01b42909216919091021783558701808452922080549193909116610bcc576065548214610bcc578054602086015167ffffffffffffffff16600160a01b026001600160e01b03199091166001600160a01b038a16171781555b50505082846001600160a01b0316866001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050505050565b610c3182826040518060200160405280600081525061128e565b5050565b60008054610100900460ff1615610cd7578160ff166001148015610c585750303b155b610ccf5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084015b60405180910390fd5b506000919050565b60005460ff808416911610610d545760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152608401610cc6565b506000805460ff191660ff92909216919091179055600190565b919050565b600054610100900460ff16610dde5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610cc6565b610c318282611452565b60408051606081018252600080825260208201819052918101919091528180600111610ef357606554811015610ef357600081815260696020908152604091829020825160608101845290546001600160a01b0381168252600160a01b810467ffffffffffffffff1692820192909252600160e01b90910460ff16151591810182905290610ef15780516001600160a01b031615610e87579392505050565b5060001901600081815260696020908152604091829020825160608101845290546001600160a01b038116808352600160a01b820467ffffffffffffffff1693830193909352600160e01b900460ff1615159281019290925215610eec579392505050565b610e87565b505b6040517fdf2d9b4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6065546001600160a01b038316610f4e57604051622e076360e81b815260040160405180910390fd5b81610f6c5760405163b562e8dd60e01b815260040160405180910390fd5b6001600160a01b0383166000818152606a6020908152604080832080546fffffffffffffffffffffffffffffffff19811667ffffffffffffffff8083168a0181169182176801000000000000000067ffffffffffffffff1990941690921783900481168a01811690920217909155858452606990925290912080546001600160e01b031916909217600160a01b4290921691909102179055808083015b6040516001830192906001600160a01b038716906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a48082106110095750606555505050565b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a029061108a903390899088908890600401611a21565b602060405180830381600087803b1580156110a457600080fd5b505af19250505080156110d4575060408051601f3d908101601f191682019092526110d191810190611a5d565b60015b61112f573d808015611102576040519150601f19603f3d011682016040523d82523d6000602084013e611107565b606091505b508051611127576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490505b949350505050565b6060609780546104b5906119b7565b60608161119c57505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b81156111c657806111b081611a90565b91506111bf9050600a83611ac1565b91506111a0565b60008167ffffffffffffffff8111156111e1576111e161172f565b6040519080825280601f01601f19166020018201604052801561120b576020820181803683370190505b5090505b841561114557611220600183611ad5565b915061122d600a86611aec565b611238906030611b00565b60f81b81838151811061124d5761124d611b18565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350611287600a86611ac1565b945061120f565b6065546001600160a01b0384166112b757604051622e076360e81b815260040160405180910390fd5b826112d55760405163b562e8dd60e01b815260040160405180910390fd5b6001600160a01b0384166000818152606a6020908152604080832080546fffffffffffffffffffffffffffffffff19811667ffffffffffffffff8083168b0181169182176801000000000000000067ffffffffffffffff1990941690921783900481168b01811690920217909155858452606990925290912080546001600160e01b0319168317600160a01b42909316929092029190911790558190818501903b156113fe575b60405182906001600160a01b038816906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a46113c76000878480600101955087611055565b6113e4576040516368d2bf6b60e11b815260040160405180910390fd5b80821061137c5782606554146113f957600080fd5b611443565b5b6040516001830192906001600160a01b038816906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a48082106113ff575b5060655561088b600085838684565b600054610100900460ff166114bd5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610cc6565b81516114d0906067906020850190611572565b5080516114e4906068906020840190611572565b5060016065555050565b8280546114fa906119b7565b90600052602060002090601f01602090048101928261151c5760008555611562565b82601f106115355782800160ff19823516178555611562565b82800160010185558215611562579182015b82811115611562578235825591602001919060010190611547565b5061156e9291506115e6565b5090565b82805461157e906119b7565b90600052602060002090601f0160209004810192826115a05760008555611562565b82601f106115b957805160ff1916838001178555611562565b82800160010185558215611562579182015b828111156115625782518255916020019190600101906115cb565b5b8082111561156e57600081556001016115e7565b6001600160e01b03198116811461066357600080fd5b60006020828403121561162357600080fd5b8135610928816115fb565b60005b83811015611649578181015183820152602001611631565b8381111561088b5750506000910152565b6000815180845261167281602086016020860161162e565b601f01601f19169290920160200192915050565b602081526000610928602083018461165a565b6000602082840312156116ab57600080fd5b5035919050565b80356001600160a01b0381168114610d6e57600080fd5b600080604083850312156116dc57600080fd5b6116e5836116b2565b946020939093013593505050565b60008060006060848603121561170857600080fd5b611711846116b2565b925061171f602085016116b2565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff808411156117605761176061172f565b604051601f8501601f19908116603f011681019082821181831017156117885761178861172f565b816040528093508581528686860111156117a157600080fd5b858560208301376000602087830101525050509392505050565b600082601f8301126117cc57600080fd5b61092883833560208501611745565b600080604083850312156117ee57600080fd5b823567ffffffffffffffff8082111561180657600080fd5b611812868387016117bb565b9350602085013591508082111561182857600080fd5b50611835858286016117bb565b9150509250929050565b6000806020838503121561185257600080fd5b823567ffffffffffffffff8082111561186a57600080fd5b818501915085601f83011261187e57600080fd5b81358181111561188d57600080fd5b86602082850101111561189f57600080fd5b60209290920196919550909350505050565b6000602082840312156118c357600080fd5b610928826116b2565b600080604083850312156118df57600080fd5b6118e8836116b2565b9150602083013580151581146118fd57600080fd5b809150509250929050565b6000806000806080858703121561191e57600080fd5b611927856116b2565b9350611935602086016116b2565b925060408501359150606085013567ffffffffffffffff81111561195857600080fd5b8501601f8101871361196957600080fd5b61197887823560208401611745565b91505092959194509250565b6000806040838503121561199757600080fd5b6119a0836116b2565b91506119ae602084016116b2565b90509250929050565b600181811c908216806119cb57607f821691505b602082108114156119ec57634e487b7160e01b600052602260045260246000fd5b50919050565b60008351611a0481846020880161162e565b835190830190611a1881836020880161162e565b01949350505050565b60006001600160a01b03808716835280861660208401525083604083015260806060830152611a53608083018461165a565b9695505050505050565b600060208284031215611a6f57600080fd5b8151610928816115fb565b634e487b7160e01b600052601160045260246000fd5b6000600019821415611aa457611aa4611a7a565b5060010190565b634e487b7160e01b600052601260045260246000fd5b600082611ad057611ad0611aab565b500490565b600082821015611ae757611ae7611a7a565b500390565b600082611afb57611afb611aab565b500690565b60008219821115611b1357611b13611a7a565b500190565b634e487b7160e01b600052603260045260246000fdfea26469706673582212206c6cdc93ed8e51c1f462995dc66e4605a94f5395055ae9f41ce35ac2b910e52d64736f6c63430008090033";

type ERC721AUConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721AUConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721AU__factory extends ContractFactory {
  constructor(...args: ERC721AUConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC721AU> {
    return super.deploy(overrides || {}) as Promise<ERC721AU>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC721AU {
    return super.attach(address) as ERC721AU;
  }
  override connect(signer: Signer): ERC721AU__factory {
    return super.connect(signer) as ERC721AU__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721AUInterface {
    return new utils.Interface(_abi) as ERC721AUInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721AU {
    return new Contract(address, _abi, signerOrProvider) as ERC721AU;
  }
}
